# PF (Packet Filter) Configuration for Network Traffic Policy
# Ethernet (en0) - Priority for Tailscale and production traffic
# Wi-Fi (en1) - General internet traffic

# Macros
ext_if_ethernet = "en0"
ext_if_wifi = "en1"
tailscale_net = "100.64.0.0/10"
libraxis_ip = "178.183.101.202"
studio_ip = "100.75.30.90"

# Tables for different traffic types
table <tailscale_hosts> { 100.64.0.0/10, 100.0.0.0/8 }
table <production_hosts> { 178.183.101.202/32, libraxis.cloud }
table <general_internet> { !100.64.0.0/10, !178.183.101.0/24 }

# Options
set skip on lo0
set optimization normal
set block-policy drop

# Traffic normalization
scrub in all

# NAT rules (if needed)
# nat on $ext_if_ethernet from !$ext_if_ethernet to <tailscale_hosts> -> ($ext_if_ethernet)

# Policy-based routing
# Route Tailscale traffic through Ethernet
pass out on $ext_if_ethernet route-to ($ext_if_ethernet $ext_if_ethernet:peer) \
    from any to <tailscale_hosts> keep state

# Route production traffic through Ethernet  
pass out on $ext_if_ethernet route-to ($ext_if_ethernet $ext_if_ethernet:peer) \
    from any to <production_hosts> keep state

# Route general traffic through Wi-Fi
pass out on $ext_if_wifi route-to ($ext_if_wifi $ext_if_wifi:peer) \
    from any to <general_internet> keep state

# QoS - Priority queuing
# High priority for Tailscale on Ethernet
pass out on $ext_if_ethernet proto tcp from any to <tailscale_hosts> \
    queue (bulk, priority) keep state

# Allow all established connections
pass in all
pass out all keep state